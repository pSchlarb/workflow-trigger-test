name: Triggered by Version Bump merged

#disable all tags and enable all brannches and only version file
on:
  push:
    branches-ignore:
      - update-rc-version
      - update-version
    paths:
      - version.txt

jobs:
  infos:
    name: infos
    runs-on: ubuntu-latest
    outputs:
      isVersionBump: ${{ steps.get-release-info.outputs.isVersionBump }}
      isPreRelease: ${{ steps.get-release-info.outputs.isRC }}
      versionTag: ${{ steps.get-release-info.outputs.versionTag }}
    steps:
      - name: Echo infos
        run: echo '${{toJSON(github)}}'

      - name: Checkout
        uses: actions/checkout@v2

      - name: get-release-info
        id: get-release-info
        uses: ./.github/actions/get-release-info
        with:
          versionString: "${{ github.event.head_commit.message }}"
      

  dummytest:
    name: Dummy Job for Tests
    runs-on: ubuntu-latest
    needs: infos
    steps:
      - run: echo "Doing tests here"

  dummybuild:
    name: Dummy Job for Packaging
    needs: dummytest
    runs-on: ubuntu-latest
    steps:
      - run: echo "Doing BuildPackages here"

  createRelease:
    name: Create Release
    needs: [infos,dummybuild]
    if: needs.infos.outputs.isVersionBump == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.infos.outputs.versionTag }}
          prerelease: ${{ needs.infos.outputs.isPreRelease }}
          generate_release_notes: true
          target_commitish: ${{github.event.ref}}
          name: "${{ needs.infos.outputs.versionTag }}"
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.NEOBOT_PR_PAT }}

  dummyPublish:
    runs-on: ubuntu-latest
    steps:
      - run: echo "publish here"